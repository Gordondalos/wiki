обьект выгл€дит так

{
им€1: значение,
им€2: значение,
им€3: значение
}

его можно присвоить переменной и обратитьс€ к свойствам или ониже пол€
var myobject = {
им€1: значение,
им€2: значение,
им€3: значение
}

можно обращатьс€ двум€ синтаксисами
так

myobject.им€1

и так
myobject[им€1]

также можно мен€ть или добавл€ть

myobject.им€1 = 25465

myobject.им€4 = ываываыва


посмотреть обьек можно через консоль

console.log(myobject);

уобьекта свойство может быть функци€ и тогда оно называетс€ методом



var myobject = {
им€1: значение,
им€2: значение,
им€3: значение
seyHi: function(){
   return "Hello!!";
}
}

console.log(myobject.seyHi());


создаем обьект в ручную выше

или так

var obj = new object();
obj.property = "value";

или так  это более новый способ через прототип 

var obj = Object.create(null);
console.log(obj); // object{}




var obj = Object.create({x:10, y:20}); // вот этот кусок это прототип Object.create({x:10, y:20});
console.log(obj);



удаление свойств им можно удалть только родные свойства, то есть те которые были не унаследованы у прототипа,
то есть если полученному обьекту не дать свои свойства просто присваива€ их то их у него не будет
и делет не сработает

delete object.x


проверка наличи€ свойства

сol("x" in object);










